---
import readingTime from "reading-time";
import { tagsConfig } from "src/data/tags";
const { post } = Astro.props;
const {
  thumbnail = "photo1.png",
  tags,
  pubDate,
  thumbnailAlt,
}: {
  thumbnail: string;
  thumbnailAlt: string;
  tags: (keyof typeof tagsConfig)[];
  pubDate: string;
} = post.frontmatter;
---

<article class="flex flex-col md:flex-row gap-8">
  <a
    href={post.url}
    class="relative aspect-[2/1] md:aspect-[2/3] h-full w-full rounded md:max-w-sm select-none" {/*bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400*/}
  >
    <img
      loading="lazy"
      src={thumbnail}
      alt={thumbnailAlt}
      class="object-cover aspect-[2/1] md:aspect-[2/3] h-full w-full rounded"
    />
    <img
      loading="lazy"
      src="/photo2.png"
      alt=""
      class="absolute left-2 top-2 hover:left-0 hover:top-0 transition-all aspect-[2/1] md:aspect-[2/3] w-full h-full object-cover mix-blend-overlay rounded"
    />
    <!-- <img
      loading="lazy"
      src="/profile.jpg"
      alt=""
      class="absolute left-4 bottom-14 h-16 w-16 rounded-full ring-8 ring-current text-purple-500 text-opacity-30"
    /> -->
  </a>
  <div class="flex-1">
    <div class="flex flex-col h-full">
      <div class="flex-1">
        <div class="sticky top-8 group">
          <a href={post.url}>
            <h1
              class={`leading tracking-wide text-3xl font-bold mb-4 text-transparent bg-clip-text ${
                tagsConfig[tags[0]].gradient
              }`}
            >
              {post.frontmatter.title}
            </h1>
            <p class="text-lg leading-relaxed tracking-wide">
              {post.frontmatter.description}
            </p>
            <div
              class="px-4 py-2 mt-4 border rounded border-zinc-700 text-zinc-700 inline-block transition-all group-hover:text-zinc-300 group-hover:border-zinc-300"
            >
              Read more<span class="sr-only">
                about {post.frontmatter.title}</span
              >
            </div>
          </a>
        </div>
      </div>
      <div class="mt-4 group text-zinc-500">
        <div class="text-sm mb-2">
          {readingTime(post.rawContent()).text} ãƒ» <time>{pubDate}</time>
        </div>
        <div class="flex gap-2">
          {
            tags.map((singleTag: keyof typeof tagsConfig) => (
              <a href={`/${tagsConfig[singleTag]?.slug}`} class="inline-block">
                <div class="opacity-30 group-hover:opacity-100 bg-zinc-800 transition-all text-sm rounded-l-full rounded-r-full flex items-center gap-2 text-zinc-500 hover:text-zinc-200">
                  <div
                    class={`rounded-full ${tagsConfig[singleTag]?.gradient} h-8 w-8 block`}
                  />
                  <div class="pr-4 block"><span class="sr-only">Tag page for: </span>{tagsConfig[singleTag]?.title}</div>
                </div>
              </a>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</article>
